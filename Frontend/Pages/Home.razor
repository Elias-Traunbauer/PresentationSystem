@page "/"
@using Frontend.Models
@inject HttpClient Http

<PageTitle>Home</PageTitle>

<h1>Presentation Overview</h1>

@code{
    public IEnumerable<Presentation>? Presentations = null;
    public bool Loading = true;
}

@{
    if (Presentations == null && Loading)
    {
        <p><em>Loading...</em></p>
    }
    else if (Presentations != null)
    { // calendar view
        <div class="calendar">
            <div class="calendar__header">
                <span class="calendar__icon">«</span>
                <span class="calendar__month">January 2024</span>
                <span class="calendar__icon">»</span>
            </div>
            <div class="calendar__weekdays">
                <div class="calendar__weekday">Sun</div>
                <div class="calendar__weekday">Mon</div>
                <div class="calendar__weekday">Tue</div>
                <div class="calendar__weekday">Wed</div>
                <div class="calendar__weekday">Thu</div>
                <div class="calendar__weekday">Fri</div>
                <div class="calendar__weekday">Sat</div>
            </div>
            <div class="calendar__days">
                <!-- Example for a few days -->
                <div class="calendar__day">1</div>
                <div class="calendar__day">2</div>
                <div class="calendar__day">3</div>
                <!-- Add additional days as needed -->
                <!-- Special classes for specific days -->
                <div class="calendar__day calendar__day--today">4</div>
                <div class="calendar__day calendar__day--selected">5</div>
                <div class="calendar__day calendar__day--disabled">6</div>
                <!-- Continue for the rest of the days -->
            </div>
        </div>

    }
    else
    {
        <p><em>Loading encountered an error</em></p>
    }
}

@code {
    protected override async Task OnInitializedAsync()
    {
        this.Presentations = await Http.GetFromJsonAsync<IEnumerable<Presentation>>("api/presentation");
        Loading = false;
    }
}